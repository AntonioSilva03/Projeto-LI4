@page "/Pagina_leilao"

@inject NavigationManager NavigationManager
@inject app.Terminado.AppStateService AppStateService

@code {
    [Parameter]
    public int id_leilao { get; set; }

    public Leilao leilao;

    public Pessoa vendedor;

    public string nome_vendedor;

    public int id_criador;

    public List<Artigo> skins = new List<Artigo>();

    public string descricao;

    public decimal preco_minimo;

    public decimal preco_reserva;

    public int? licitacao_atual;  // id do lance mais alto

    public decimal valor_licitacao_atual;

    public string nome_highest_bidder;

    public int id_highest_bidder;

    public DateTime data_fim;

    public TimeSpan tempo_restante;

    public TimeSpan tempo_ate_inicio;

    public decimal input_licitacao;

    public bool terminado = false;

    public bool iniciado = false;

    public bool licitacao_valida = true;

    public bool licitar_no_proprio_leilao = false;

    public bool favorito;

    public bool reserva = false;

    public int taxa;

    IDatabaseFacade db = new DatabaseFacade();

    public bool TerminadoHandled => AppStateService.TerminadoHandledMap.ContainsKey(id_leilao) && AppStateService.TerminadoHandledMap[id_leilao];

    protected override void OnInitialized()
    {
        var uri = new Uri(NavigationManager.Uri);
        var queryString = uri.Query;

        if (queryString.Contains("id_leilao")) {
            var queryParams = System.Web.HttpUtility.ParseQueryString(queryString);
            id_leilao = int.Parse(queryParams["id_leilao"]);

            leilao = db.get_Leilao(id_leilao);

            id_criador = leilao.getId_Criador();
            vendedor = db.get_Pessoa(id_criador);
            nome_vendedor = vendedor.getNickname();

            skins = db.get_artigos_leilao(id_leilao);
            descricao = leilao.getDescricao();
            preco_minimo = leilao.getPrecoMinimo();
            preco_reserva = leilao.getPrecoReserva();

            DateTime data_inicio = leilao.getDataHoraInicial();
            int duracao = leilao.getDuracao();
            data_fim = data_inicio.AddMinutes(duracao);
            tempo_restante = data_fim.Subtract(DateTime.Now);
            if (tempo_restante.TotalSeconds < 0) terminado = true;
            if (data_inicio > DateTime.Now) iniciado = false;
            else iniciado = true;   
            tempo_ate_inicio = data_inicio.Subtract(DateTime.Now);

            licitacao_atual = leilao.getIdLanceAtual();
            if (licitacao_atual != null) {
                Lance lance = db.get_Lance((int)licitacao_atual);
                valor_licitacao_atual = lance.getValor();
                nome_highest_bidder = db.get_Pessoa(lance.getId_Licitador()).getNickname();
                id_highest_bidder = lance.getId_Licitador();
            }
            if(terminado && preco_reserva > valor_licitacao_atual)
            {
                reserva = true;
            }
            if (terminado && !TerminadoHandled) {
                AppStateService.TerminadoHandledMap[id_leilao] = true;
                AppStateService.SaveState();
                tempo_restante = new TimeSpan(0, 0, 0);
                iniciado = false;
                if(licitacao_atual != null){
                Lance lance = db.get_Lance((int)licitacao_atual);
                valor_licitacao_atual = lance.getValor();
                    if(preco_reserva > valor_licitacao_atual)
                    {
                        db.devolve_dinheiro_utilizador(lance.getId_Licitador(), valor_licitacao_atual);
                    }
                    else
                    {
                        decimal saldo_vendedor = db.get_saldo(id_criador);
                        db.update_saldo(id_criador, saldo_vendedor + valor_licitacao_atual);
                    }
                }

            }

            favorito = db.e_favorito(id_leilao, CurrentUser.user.getID());
        }
    }

    decimal preco (int id)
    {
        Leilao leilao = db.get_Leilao(id);

        if(leilao.getIdLanceAtual() == null)
        {
            return leilao.getPrecoMinimo();
        }
        else
        {
            Lance lance = db.get_Lance(leilao.getIdLanceAtual());
            return lance.getValor();
        }
    }

    void licitar() {
        decimal? saldo = CurrentUser.saldo;
        int id_licitador = CurrentUser.user.getID();

        if (id_licitador != id_criador) {
            if (iniciado && saldo >= input_licitacao && input_licitacao > valor_licitacao_atual) {
                favoritar_leilao();
                int id_lance;
                bool id_existe;
                do {
                    id_lance = new Random().Next(1, 1000000);
                    id_existe = db.IDLance_existe(id_lance);
                } while(id_existe);


                if (licitacao_atual != null) {
                    Lance lance_anterior = db.get_Lance((int)licitacao_atual);
                    int id_licitador_anterior = lance_anterior.getId_Licitador();
                    decimal valor_anterior = lance_anterior.getValor();
                    db.devolve_dinheiro_utilizador(id_licitador_anterior, valor_anterior);
                    CurrentUser.saldo += valor_anterior;
                }

                Lance lance = new Lance(id_lance, id_leilao, id_licitador, input_licitacao);
                db.add_Lance(lance);
                db.update_id_lanceAtual(id_leilao, id_lance);

                CurrentUser.saldo -= input_licitacao;
                db.update_saldo(id_licitador, CurrentUser.saldo);

                OnInitialized();
            } else {
                licitacao_valida = false;
            }
        } else {
            licitar_no_proprio_leilao = true;
        }

    }

    void favoritar_leilao() {
        if (!favorito) {
            favorito = true;
            db.favoritar_leilao(id_leilao, CurrentUser.user.getID());
        }
    }

    void desfavoritar_leilao() {
        if (favorito) {
            favorito = false;
            db.desfavoritar_leilao(id_leilao, CurrentUser.user.getID());
        }
    }
}

<PageTitle>Leilão</PageTitle>

<div class="leilao-container">
    @if(!terminado) {
        <h1>Leilão nº @id_leilao</h1>
    } else {
        <h1>Leilão nº @id_leilao (terminado)</h1>
    }

    <div class="leilao-info-container">
        <p class="leilao-descricao">@descricao</p>

        <div style="width: 80%; text-align: left;">
            <p><span style="font-weight: bold;">Vendedor: </span> @nome_vendedor, ID: @id_criador</p>
            @if (!terminado) {
                <p><span style="font-weight: bold;">Preço mínimo: </span> @preco_minimo €</p>
            }

            @if(terminado) {
                if(preco_reserva > valor_licitacao_atual){
                }
                else if(nome_highest_bidder != null){
                <p><span style="font-weight: bold;">Vencedor :</span> @nome_highest_bidder, ID: @id_highest_bidder</p>
                <p><span style="font-weight: bold;">Valor final: </span> @valor_licitacao_atual €</p>
                }
                else{
                    <p><span style="font-weight: bold;">Ninguém licitou</span></p>
                }
            }

            @if(!terminado && licitacao_atual != null) {
                <p><span style="font-weight: bold;">Licitação atual: </span> @valor_licitacao_atual € feita por @nome_highest_bidder, ID: @id_highest_bidder</p>
            } else if(!terminado && licitacao_atual == null) {
                <p><span style="font-weight: bold;">Sem licitações</span></p>
            }
        </div>

        <div class="leilao-interacao">
            @if(!terminado){
            <div class="leilao-interacao-field">
                @if (iniciado || terminado) {
                    <span style="font-weight: bold;">Tempo restante: </span> 
                } else {
                    <span style="font-weight: bold;">Tempo até início: </span> 
                }

                @if (tempo_ate_inicio.Days > 0) {
                        <span>@tempo_ate_inicio.Days dias </span>
                    } else if (tempo_ate_inicio.Hours > 0) {
                        <span>@tempo_ate_inicio.Hours h:@tempo_ate_inicio.Minutes m </span>
                    } else if (tempo_ate_inicio.Minutes > 0) {
                        <span>@tempo_ate_inicio.Minutes m</span>
                    } else if(tempo_ate_inicio.Seconds > 0) { 
                        <span>@tempo_ate_inicio.Seconds s</span>
                    }else if (tempo_restante.Days > 0) {
                        <span>@tempo_restante.Days dias</span>
                    } else if (tempo_restante.Hours > 0) {
                        <span>@tempo_restante.Hours h:@tempo_restante.Minutes m</span>
                    } else if (tempo_restante.Minutes > 0){
                        <span>@tempo_restante.Minutes m</span>
                    } else if (tempo_restante.Seconds > 0){
                        <span>@tempo_restante.Seconds s</span>
                    }
                
            </div>
            }

            @if(!terminado){
            <div class="leilao-interacao-field">
                @if (iniciado) {
                    <input type="number" step="0.01" placeholder="valor" @bind="@input_licitacao" />
                } else {
                    <span style="font-weight: bold;">Leilão ainda não começou</span>
                }
            </div>
            }

            @if(!terminado){
            <div class="licitar-button leilao-interacao-field" @onclick="licitar">Licitar</div>
            }
            
            <div>
                @if (favorito) {
                    <img class="fav-button" src="/imgs/heart.png" @onclick="desfavoritar_leilao" >
                } else {
                    <img class="fav-button" src="/imgs/heart_white.png" @onclick="favoritar_leilao" >
                }
            </div>
            
        </div>

        @if(reserva){
             <p style="margin-top: 20px; font-weight: bold">Preço de reserva não foi ultrapassado, dinheiro devolvido ao último licitador: @nome_highest_bidder, ID: @id_highest_bidder</p>
        }

        @if (!licitacao_valida) {
            <p style="margin-top: 20px; font-weight: bold">Valor da licitação tem de ser superior ao valor atual</p>
        }

        @if (licitar_no_proprio_leilao) {
            <p style="margin-top: 20px; font-weight: bold">Não pode licitar no seu próprio leilão</p>
        }
    </div>

    <div class="leilao-skins-container">
        @foreach (var skin in skins) {
            string arma = skin.getTipo().ToString();
            string nome_skin = skin.getNome();
            string condicao = skin.getCondicao();
            string raridade = skin.getRaridade().ToString();
            decimal preco_maximo = preco(skin.getId_leilao());

            string img = skin.getImagem();
            if (img == null) img = $"/imgs/default_items/{arma}.png";

            <Leilao_card skin_img="@img" id_leilao="@id_leilao" weapon="@arma" skin_name="@nome_skin" condition="@condicao" raridade = "@raridade" preco_maximo="@preco_maximo" />
        }
    </div>
</div>