@page "/Criar_leilao"

@inject NavigationManager NavigationManager

@code {
    public int id_leilao;
    public int id_criador;
    public string descricao;
    public decimal preco_inicial;
    public decimal preco_reserva;
    public DateTime data_inicio;
    public DateTime hora_inicio;
    public DateTime datetime_inicio;
    public int duracao;  // minutos

    IDatabaseFacade db = new DatabaseFacade();

    List<Leilao_template> leilaoTemplates = new List<Leilao_template>();

    Dictionary<int, Artigo> artigos_leilao = new Dictionary<int, Artigo>();

    protected override void OnInitialized() {
        cria_id_leilao();
        leilaoTemplates.Add(new Leilao_template());
        base.OnInitialized();
    }

    // Penso que e necessario criar um artigo para meter outro template desta forma
    // Pensar em criar uma funcao que mete mais templates e outra que cria os artigos todos de uma vez e mete no diciotnario
    void add_artigo(Leilao_template template) {  
        int id_artigo = cria_id_artigo();
        Leilao_template artigo = leilaoTemplates.Last();

        string tipo_item = artigo.tipo_item;
        string nome_skin = artigo.nome_skin;
        string condicao = artigo.condicao;
        string raridade = artigo.raridade;
        TipoArtigo tipo_item_enum;

        if (Enum.TryParse(tipo_item, out tipo_item_enum)) {
            Artigo novo_artigo = new Artigo(id_artigo, id_leilao, null, nome_skin, condicao, raridade, "no caralho", tipo_item_enum);

            artigos_leilao.Add(id_artigo, novo_artigo);

            leilaoTemplates.Add(new Leilao_template());
        }
    }

    void CombineDateAndTime() {
        datetime_inicio = new DateTime(
            data_inicio.Year, data_inicio.Month, data_inicio.Day,
            hora_inicio.Hour, hora_inicio.Minute, hora_inicio.Second
        );
    }

    void cria_id_leilao() {
        bool id_existe;
        do {
            id_leilao = new Random().Next(1, 1000000);
            id_existe = db.IDLeilao_existe(id_leilao);
        } while(id_existe);
    }

    int cria_id_artigo() {
        int id_artigo;
        bool id_existe;
        do {
            id_artigo = new Random().Next(1, 1000000);
            id_existe = db.ID_existe(id_artigo);
        } while(id_existe);

        return id_artigo;
    }

    // Para debugging
    void mete_artigos_na_db() { 
        foreach (var artigo in artigos_leilao.Values) {
            db.add_Artigo(artigo);
        }
    }

    void submeter_leilao() {
        CombineDateAndTime();
        id_criador = CurrentUser.user.getID();
        Leilao leilao = new Leilao(id_leilao, id_criador, descricao, preco_reserva, preco_inicial, datetime_inicio, duracao, null, null, null, null, artigos_leilao);
        db.add_Leilao(leilao);
        mete_artigos_na_db();
        NavigationManager.NavigateTo("/Leiloes_recomendados");
    }
 }

<PageTitle>Criar Leilão</PageTitle>

<h1>Criar Leilão</h1>

<div class="auction-templates-container">
    <div class="auction-info-container">
        <div class="auction-input">
            <textarea class="description" rows="6" cols="50" placeholder="Descrição Máx: 280 carateres" maxlength="280" @bind="@descricao" required />
        </div>

        <div class="info-row">
            <div class="auction-input">
                <label for="initial-price">Preço inicial:</label>
                <input class="input" name="initial_price" type="number" step="0.01" @bind="@preco_inicial" required />
            </div>

            <div class="auction-input">
                <label for="reserve-price">Preço de reserva:</label>
                <input class="input" name="reserve_price" type="number" step="0.01" @bind="@preco_reserva" required />
            </div>
        </div>

        <div class="info-row">
            <div class="auction-input">
                <label for="duration">Duração:</label>
                <input class="input" name="duration" type="number"  placeholder="Em Minutos" step="1" @bind="@duracao" required />
            </div>

            <div class="auction-input">
                <label for="start-date">Data de início:</label>
                <input class="input" name="start_date" type="date" @bind="@data_inicio" required />
            </div>
        </div>

        <div class="info-row">
            <div class="auction-input">
                <label for="start-time">Hora de início:</label>
                <input class="input" name="start_time" type="time" @bind="@hora_inicio" required />
            </div>

            <div class="submit-button auction-input" @onclick="submeter_leilao">Submeter</div>
        </div>
    </div>

    <div class="templates-container">
        @for (int i = 0; i < leilaoTemplates.Count; i++) {
            <Leilao_template template="@leilaoTemplates[i]" />
        }

        <div class="add-template-button" @onclick="() => add_artigo(new Leilao_template())" >
            <img src="/imgs/plus.png" style="height: 40px;">
        </div>
    </div>
</div>